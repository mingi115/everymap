plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.map'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven{ url 'https://repo.spring.io/milestone'}
	maven{ url 'https://repo.spring.io/snapshot'}
}


dependencyLocking {
	dependencies {
		//implementation platform("org.springframework.ai:spring-ai-bom:0.8.1-SNAPSHOT")
		implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-SNAPSHOT")
	}
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'com.github.mwiede:jsch:0.2.19'
	implementation 'org.locationtech.jts:jts-core:1.20.0'
	//implementation 'org.springframework.ai:spring-ai-openai:1.0.0-SNAPSHOT'
	implementation 'org.springframework.ai:spring-ai-azure-openai-spring-boot-starter'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}



tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('build') {
	doFirst {
		// 환경 변수 설정
		def someProperty = System.getenv('VWORLD_API_KEY') ?: 'defaultValue'
	}
}
